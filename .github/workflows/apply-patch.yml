name: apply-patch-url
on:
  workflow_dispatch:
    inputs:
      patch_url:
        description: "URL RAW del diff (Gist u otro)"
        required: true
        type: string
      sha256:
        description: "SHA256 esperado del diff (opcional)"
        required: false
        type: string
      commit_direct:
        description: "Hacer push directo a la rama por defecto"
        required: true
        default: "false"
        type: choice
        options: ["false", "true"]

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detectar rama por defecto
        id: def
        shell: bash
        run: |
          set -euo pipefail
          # intenta leer HEAD remoto
          DEF=$(git remote show origin | sed -n 's/^\s*HEAD branch: //p')
          if [ -z "${DEF:-}" ]; then
            git remote set-head origin -a || true
            DEF=$(git symbolic-ref --short refs/remotes/origin/HEAD 2>/dev/null | sed 's#^origin/##')
          fi
          echo "def=${DEF:-main}" >> "$GITHUB_OUTPUT"

      - name: Descargar diff
        id: get
        shell: bash
        run: |
          set -euo pipefail
          curl -fsSL "${{ github.event.inputs.patch_url }}" -o /tmp/patch.diff
          # normalizar fin de línea
          sed -i 's/\r$//' /tmp/patch.diff
          # verificar sha256 si se aporta
          if [ -n "${{ github.event.inputs.sha256 }}" ]; then
            echo "${{ github.event.inputs.sha256 }}  /tmp/patch.diff" | sha256sum -c -
          fi
          # mostrar primeras líneas para depurar si hace falta
          head -n 20 /tmp/patch.diff

      - name: Preflight (no cambia nada)
        id: preflight
        shell: bash
        run: git apply --check /tmp/patch.diff
        continue-on-error: true

      - name: Diagnóstico si falla preflight
        if: steps.preflight.outcome != 'success'
        shell: bash
        run: |
          {
            echo "== git status =="; git status --porcelain=v1 || true
            echo "== apply --check =="
            git apply --check /tmp/patch.diff 2> /tmp/apply_check.err || true
            cat /tmp/apply_check.err || true
            echo "== primeras 200 líneas del diff =="; sed -n '1,200p' /tmp/patch.diff || true
          } | tee /tmp/debug.txt

      - name: Artifact de depuración
        if: steps.preflight.outcome != 'success'
        uses: actions/upload-artifact@v4
        with:
          name: patch-debug-${{ github.run_id }}
          path: |
            /tmp/patch.diff
            /tmp/apply_check.err
            /tmp/debug.txt

      - name: Cortar si preflight falló
        if: steps.preflight.outcome != 'success'
        shell: bash
        run: exit 1

      - name: Aplicar diff
        shell: bash
        run: git apply --index --whitespace=fix --inaccurate-eof /tmp/patch.diff

      - name: ¿Hubo cambios?
        id: changes
        shell: bash
        run: |
          if git diff --cached --quiet; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: No hay cambios que commitear
        if: steps.changes.outputs.changed != 'true'
        shell: bash
        run: echo "Diff no produjo cambios. Nada que hacer."

      - name: Crear PR
        if: steps.changes.outputs.changed == 'true' && github.event.inputs.commit_direct != 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          title: "hope: apply patch"
          body: |
            Fuente: ${{ github.event.inputs.patch_url }}
            SHA256: ${{ github.event.inputs.sha256 || 'n/a' }}
          branch: hope/apply-${{ github.run_id }}
          base: ${{ steps.def.outputs.def }}
          commit-message: "hope: apply patch"
          delete-branch: true

      - name: Autor del commit (push directo)
        if: steps.changes.outputs.changed == 'true' && github.event.inputs.commit_direct == 'true'
        shell: bash
        run: |
          git config user.name  "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Commit y push directo
        if: steps.changes.outputs.changed == 'true' && github.event.inputs.commit_direct == 'true'
        env:
          PUSH_TOKEN: ${{ secrets.PAT_PUSH || github.token }}
        shell: bash
        run: |
          git commit -m "hope: apply patch"
          git push "https://${PUSH_TOKEN}@github.com/${{ github.repository }}.git" HEAD:${{ steps.def.outputs.def }}
